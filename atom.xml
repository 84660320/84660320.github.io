<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>daydayup863</title>
  
  <subtitle>人生就像一杯茶，不会苦一辈子，但总会苦一阵子。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://daydayup863.github.io/"/>
  <updated>2021-04-16T08:11:37.855Z</updated>
  <id>http://daydayup863.github.io/</id>
  
  <author>
    <name>daydayup</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQL-standard function body</title>
    <link href="http://daydayup863.github.io/PostgreSQL/function/SQL-standard/PostgreSQL_SQL-standard_function_body/"/>
    <id>http://daydayup863.github.io/PostgreSQL/function/SQL-standard/PostgreSQL_SQL-standard_function_body/</id>
    <published>2021-04-16T07:21:25.000Z</published>
    <updated>2021-04-16T08:11:37.855Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;PostgreSQL 函数和储存过程支持SQL-standard function body&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="function" scheme="http://daydayup863.github.io/categories/PostgreSQL/function/"/>
    
      <category term="SQL-standard" scheme="http://daydayup863.github.io/categories/PostgreSQL/function/SQL-standard/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="function" scheme="http://daydayup863.github.io/tags/function/"/>
    
      <category term="SQL-standard" scheme="http://daydayup863.github.io/tags/SQL-standard/"/>
    
  </entry>
  
  <entry>
    <title>Linux 新机配置</title>
    <link href="http://daydayup863.github.io/linux/linux_new_machine/"/>
    <id>http://daydayup863.github.io/linux/linux_new_machine/</id>
    <published>2021-03-29T07:32:31.000Z</published>
    <updated>2021-03-29T07:38:38.380Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;记录一些linux新机器常用的配置, 方便更换系统时更快的配置个人环境.&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://daydayup863.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="http://daydayup863.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL HA patroni 测试案例</title>
    <link href="http://daydayup863.github.io/uncategorized/PostgreSQL_patroni/"/>
    <id>http://daydayup863.github.io/uncategorized/PostgreSQL_patroni/</id>
    <published>2021-03-16T10:28:12.000Z</published>
    <updated>2021-03-16T10:40:30.586Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;主要针对patroni 由1.6.5-2 升级至2.0.1 的版本&lt;/p&gt;
&lt;h1 id=&quot;测试环境&quot;&gt;&lt;a href=&quot;#测试环境&quot; class=&quot;headerlink&quot; title=&quot;测试环境&quot;&gt;&lt;/a&gt;测试环境&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;zookeeper +
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PostgreSQL 生成列</title>
    <link href="http://daydayup863.github.io/PostgreSQL/Generated-column/pg_grnerated_column/"/>
    <id>http://daydayup863.github.io/PostgreSQL/Generated-column/pg_grnerated_column/</id>
    <published>2021-03-15T07:35:49.000Z</published>
    <updated>2021-03-15T07:38:31.812Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;PostgreSQL 生成列的三种使用方式&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="Generated column" scheme="http://daydayup863.github.io/categories/PostgreSQL/Generated-column/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="Generated column" scheme="http://daydayup863.github.io/tags/Generated-column/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL WAL 记录了什么?</title>
    <link href="http://daydayup863.github.io/WAL/PostgreSQL/pg_wal/"/>
    <id>http://daydayup863.github.io/WAL/PostgreSQL/pg_wal/</id>
    <published>2021-03-15T06:37:02.000Z</published>
    <updated>2021-03-15T06:44:21.294Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于持久性&quot;&gt;&lt;a href=&quot;#关于持久性&quot; class=&quot;headerlink&quot; title=&quot;关于持久性&quot;&gt;&lt;/a&gt;关于持久性&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs plain&quot;&gt;持久性是指，事务提交后，对系统的影响必须是永久的，即使系统意外宕机，也必须确保事务提交时的修改已真正永久写入到永久存储中。&lt;br&gt;最简单的实现方法，当然是在事务提交后立即刷新事务修改后的数据到磁盘。但是磁盘和内存之间的IO操作是最影响数据库系统影响时间的，一有事务提交就去刷新磁盘，会对数据库性能产生不好影响。&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="WAL" scheme="http://daydayup863.github.io/categories/WAL/"/>
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/WAL/PostgreSQL/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="WAL" scheme="http://daydayup863.github.io/tags/WAL/"/>
    
  </entry>
  
  <entry>
    <title>order by + limit N index backward scan 慢SQL优化</title>
    <link href="http://daydayup863.github.io/sql/limit/order-by/slow-query/pg_turn_away_from_index_backward_scan/"/>
    <id>http://daydayup863.github.io/sql/limit/order-by/slow-query/pg_turn_away_from_index_backward_scan/</id>
    <published>2021-03-15T06:22:23.000Z</published>
    <updated>2021-03-15T06:30:15.227Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;backward-index-scan&quot;&gt;&lt;a href=&quot;#backward-index-scan&quot; class=&quot;headerlink&quot; title=&quot;backward  index scan&quot;&gt;&lt;/a&gt;backward  index scan&lt;/h1&gt;&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs angelscript&quot;&gt;mydb=# explain analyze select data_id,create_time &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; test_table where status=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; city_id=&lt;span class=&quot;hljs-number&quot;&gt;310188&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; type=&lt;span class=&quot;hljs-number&quot;&gt;103&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; sub_type=any(&lt;span class=&quot;hljs-built_in&quot;&gt;array&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;10306&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10304&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10305&lt;/span&gt;]) order by create_time desc limit &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;br&gt;                                                                                    QUERY PLAN                                                                                    &lt;br&gt;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br&gt; Limit  (cost=&lt;span class=&quot;hljs-number&quot;&gt;0.44&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;.1615&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.86&lt;/span&gt; rows=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; width=&lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;) (actual time=&lt;span class=&quot;hljs-number&quot;&gt;10945.944&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;.10945&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.945&lt;/span&gt; rows=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; loops=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;br&gt;   -&amp;gt;  Index Scan Backward using test_table_create_time_idx on test_table  (cost=&lt;span class=&quot;hljs-number&quot;&gt;0.44&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;.1936888&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.15&lt;/span&gt; rows=&lt;span class=&quot;hljs-number&quot;&gt;1199&lt;/span&gt; width=&lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;) (actual time=&lt;span class=&quot;hljs-number&quot;&gt;10945.942&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;.10945&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.942&lt;/span&gt; rows=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; loops=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;br&gt;         Filter: ((status = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) AND (city_id = &lt;span class=&quot;hljs-number&quot;&gt;310188&lt;/span&gt;) AND (type = &lt;span class=&quot;hljs-number&quot;&gt;103&lt;/span&gt;) AND (sub_type = ANY (&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;&amp;#123;10306,10304,10305&amp;#125;&amp;#x27;&lt;/span&gt;::&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;eger[])))&lt;br&gt;         Rows Removed by Filter: &lt;span class=&quot;hljs-number&quot;&gt;9975856&lt;/span&gt;&lt;br&gt; Planning time: &lt;span class=&quot;hljs-number&quot;&gt;0.573&lt;/span&gt; ms&lt;br&gt; Execution time: &lt;span class=&quot;hljs-number&quot;&gt;10945.974&lt;/span&gt; ms&lt;br&gt;(&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; rows) &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="sql" scheme="http://daydayup863.github.io/categories/sql/"/>
    
      <category term="limit" scheme="http://daydayup863.github.io/categories/sql/limit/"/>
    
      <category term="order by" scheme="http://daydayup863.github.io/categories/sql/limit/order-by/"/>
    
      <category term="slow query" scheme="http://daydayup863.github.io/categories/sql/limit/order-by/slow-query/"/>
    
    
      <category term="sql" scheme="http://daydayup863.github.io/tags/sql/"/>
    
      <category term="limit" scheme="http://daydayup863.github.io/tags/limit/"/>
    
      <category term="order by" scheme="http://daydayup863.github.io/tags/order-by/"/>
    
      <category term="slow query" scheme="http://daydayup863.github.io/tags/slow-query/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL格式化SQL</title>
    <link href="http://daydayup863.github.io/PostgreSQL/sql/pg_sql_format/"/>
    <id>http://daydayup863.github.io/PostgreSQL/sql/pg_sql_format/</id>
    <published>2021-03-15T06:15:57.000Z</published>
    <updated>2021-03-15T06:18:05.037Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;利用pg_get_viewdef完成SQL美化。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="sql" scheme="http://daydayup863.github.io/categories/PostgreSQL/sql/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="sql" scheme="http://daydayup863.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>gcc, g++ 使用切换</title>
    <link href="http://daydayup863.github.io/Linux/g/gcc/Linux_gxx/"/>
    <id>http://daydayup863.github.io/Linux/g/gcc/Linux_gxx/</id>
    <published>2021-03-15T04:01:01.000Z</published>
    <updated>2021-03-15T04:03:28.484Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装版本&quot;&gt;&lt;a href=&quot;#安装版本&quot; class=&quot;headerlink&quot; title=&quot;安装版本&quot;&gt;&lt;/a&gt;安装版本&lt;/h1&gt;&lt;figure class=&quot;highlight apache&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs apache&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;sudo&lt;/span&gt; apt-get install gcc-&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt; gcc-&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;-multilib g++-&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt; g++-&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;-multilib&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://daydayup863.github.io/categories/Linux/"/>
    
      <category term="g++" scheme="http://daydayup863.github.io/categories/Linux/g/"/>
    
      <category term="gcc" scheme="http://daydayup863.github.io/categories/Linux/g/gcc/"/>
    
    
      <category term="Linux" scheme="http://daydayup863.github.io/tags/Linux/"/>
    
      <category term="g++" scheme="http://daydayup863.github.io/tags/g/"/>
    
      <category term="gcc" scheme="http://daydayup863.github.io/tags/gcc/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu终端常用的快捷键</title>
    <link href="http://daydayup863.github.io/ubuntu/Linux/ubuntu_quick_key/"/>
    <id>http://daydayup863.github.io/ubuntu/Linux/ubuntu_quick_key/</id>
    <published>2021-03-15T03:42:41.000Z</published>
    <updated>2021-03-15T03:53:07.103Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu中的许多操作在终端（Terminal）中十分的快捷，记住一些快捷键的操作更得心应手。在Ubuntu中打开终端的快捷键是Ctrl+Alt+T。其他的一些常用的快捷键如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="http://daydayup863.github.io/categories/ubuntu/"/>
    
      <category term="Linux" scheme="http://daydayup863.github.io/categories/ubuntu/Linux/"/>
    
    
      <category term="Linux" scheme="http://daydayup863.github.io/tags/Linux/"/>
    
      <category term="ubuntu" scheme="http://daydayup863.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL函数/存储过程返回多个游标</title>
    <link href="http://daydayup863.github.io/PostgreSQL/cursor/refcursor/PostgreSQL_refcursor/"/>
    <id>http://daydayup863.github.io/PostgreSQL/cursor/refcursor/PostgreSQL_refcursor/</id>
    <published>2021-03-12T06:15:38.000Z</published>
    <updated>2021-03-12T06:18:20.905Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;function-返回多个游标&quot;&gt;&lt;a href=&quot;#function-返回多个游标&quot; class=&quot;headerlink&quot; title=&quot;function 返回多个游标&quot;&gt;&lt;/a&gt;function 返回多个游标&lt;/h1&gt;&lt;figure class=&quot;highlight pgsql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs pgsql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OR REPLACE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; show_cities_multiple() &lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SETOF&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;refcursor&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; $$&lt;br&gt;&lt;span class=&quot;pgsql&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;pgsql&quot;&gt;   ref1 &lt;span class=&quot;hljs-type&quot;&gt;refcursor&lt;/span&gt;;           &lt;span class=&quot;hljs-comment&quot;&gt;-- Declare cursor variables&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;pgsql&quot;&gt;   ref2 &lt;span class=&quot;hljs-type&quot;&gt;refcursor&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;pgsql&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;pgsql&quot;&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;OPEN&lt;/span&gt; ref1 &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;   &lt;span class=&quot;hljs-comment&quot;&gt;-- Open the first cursor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;pgsql&quot;&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN NEXT&lt;/span&gt; ref1;                                                                              &lt;span class=&quot;hljs-comment&quot;&gt;-- Return the cursor to the caller&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;pgsql&quot;&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;OPEN&lt;/span&gt; ref2 &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;   &lt;span class=&quot;hljs-comment&quot;&gt;-- Open the second cursor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;pgsql&quot;&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN NEXT&lt;/span&gt; ref2;                                                                              &lt;span class=&quot;hljs-comment&quot;&gt;-- Return the cursor to the caller&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;pgsql&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;ruby&quot;&gt; $$&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;LANGUAGE&lt;/span&gt; plpgsql;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="cursor" scheme="http://daydayup863.github.io/categories/PostgreSQL/cursor/"/>
    
      <category term="refcursor" scheme="http://daydayup863.github.io/categories/PostgreSQL/cursor/refcursor/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="cursor" scheme="http://daydayup863.github.io/tags/cursor/"/>
    
      <category term="refcursor" scheme="http://daydayup863.github.io/tags/refcursor/"/>
    
  </entry>
  
  <entry>
    <title>docker常用命令</title>
    <link href="http://daydayup863.github.io/docker/docker_command/"/>
    <id>http://daydayup863.github.io/docker/docker_command/</id>
    <published>2021-03-11T08:57:05.000Z</published>
    <updated>2021-03-11T08:58:31.580Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;将-image-文件从仓库抓取到本地，-默认library组&quot;&gt;&lt;a href=&quot;#将-image-文件从仓库抓取到本地，-默认library组&quot; class=&quot;headerlink&quot; title=&quot;将 image 文件从仓库抓取到本地， 默认library组&quot;&gt;&lt;/a&gt;将 image 文件从仓库抓取到本地， 默认library组&lt;/h1&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs arduino&quot;&gt;$ docker &lt;span class=&quot;hljs-built_in&quot;&gt;image&lt;/span&gt; pull library/hello-world&lt;br&gt;$ docker &lt;span class=&quot;hljs-built_in&quot;&gt;image&lt;/span&gt; pull hello-world&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;列出本机的所有-image-文件。&quot;&gt;&lt;a href=&quot;#列出本机的所有-image-文件。&quot; class=&quot;headerlink&quot; title=&quot;列出本机的所有 image 文件。&quot;&gt;&lt;/a&gt;列出本机的所有 image 文件。&lt;/h1&gt;&lt;figure class=&quot;highlight mel&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs mel&quot;&gt;$ docker &lt;span class=&quot;hljs-keyword&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;删除-image-文件&quot;&gt;&lt;a href=&quot;#删除-image-文件&quot; class=&quot;headerlink&quot; title=&quot;删除 image 文件&quot;&gt;&lt;/a&gt;删除 image 文件&lt;/h1&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs elixir&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$ &lt;/span&gt;docker rmi [imageName]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://daydayup863.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="http://daydayup863.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7+PostgreSQL11.2+Docker</title>
    <link href="http://daydayup863.github.io/PostgreSQL/docker/PostgreSQL_docker/"/>
    <id>http://daydayup863.github.io/PostgreSQL/docker/PostgreSQL_docker/</id>
    <published>2021-03-11T08:36:07.000Z</published>
    <updated>2021-03-12T06:24:32.140Z</updated>
    
    <summary type="html">
    
      PostgreSQL Docker image 制作
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="docker" scheme="http://daydayup863.github.io/categories/PostgreSQL/docker/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="docker" scheme="http://daydayup863.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://daydayup863.github.io/uncategorized/hello-world/"/>
    <id>http://daydayup863.github.io/uncategorized/hello-world/</id>
    <published>2021-03-05T08:51:41.421Z</published>
    <updated>2020-08-04T03:05:29.474Z</updated>
    
    <summary type="html">
    
       
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PostgreSQL开发指南</title>
    <link href="http://daydayup863.github.io/PostgreSQL/PostgreSQL%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/"/>
    <id>http://daydayup863.github.io/PostgreSQL/PostgreSQL%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/</id>
    <published>2021-02-25T09:16:23.000Z</published>
    <updated>2021-03-05T08:30:47.555Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;命名规范&quot;&gt;&lt;a href=&quot;#命名规范&quot; class=&quot;headerlink&quot; title=&quot;命名规范&quot;&gt;&lt;/a&gt;命名规范&lt;/h1&gt;&lt;figure class=&quot;highlight oxygene&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
        
      
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="开发指南" scheme="http://daydayup863.github.io/tags/%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL git commit 阅读记录</title>
    <link href="http://daydayup863.github.io/PostgreSQL/PostgreSQL_git_log/"/>
    <id>http://daydayup863.github.io/PostgreSQL/PostgreSQL_git_log/</id>
    <published>2021-01-22T03:43:14.000Z</published>
    <updated>2021-04-16T07:15:51.445Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;记录阅读PostgreSQL git 提交记录, 觉得好的记录一下.&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="git" scheme="http://daydayup863.github.io/tags/git/"/>
    
      <category term="commit log" scheme="http://daydayup863.github.io/tags/commit-log/"/>
    
  </entry>
  
  <entry>
    <title>PostGIS 操作geometry方法</title>
    <link href="http://daydayup863.github.io/PostgreSQL/gis/Postgis/Postgis%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    <id>http://daydayup863.github.io/PostgreSQL/gis/Postgis/Postgis%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</id>
    <published>2020-12-24T07:42:57.000Z</published>
    <updated>2021-03-05T08:30:47.555Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;记录Postgis常用方法.&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
      <category term="gis" scheme="http://daydayup863.github.io/categories/PostgreSQL/gis/"/>
    
      <category term="Postgis" scheme="http://daydayup863.github.io/categories/PostgreSQL/gis/Postgis/"/>
    
    
      <category term="gis" scheme="http://daydayup863.github.io/tags/gis/"/>
    
      <category term="postgis" scheme="http://daydayup863.github.io/tags/postgis/"/>
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>python3 ldap3 NTLM验证用户</title>
    <link href="http://daydayup863.github.io/python/python3_ldap%E9%AA%8C%E8%AF%81/"/>
    <id>http://daydayup863.github.io/python/python3_ldap%E9%AA%8C%E8%AF%81/</id>
    <published>2020-12-18T09:40:54.000Z</published>
    <updated>2021-03-05T08:30:47.555Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
    
      <category term="python" scheme="http://daydayup863.github.io/categories/python/"/>
    
    
      <category term="python3" scheme="http://daydayup863.github.io/tags/python3/"/>
    
      <category term="ldap" scheme="http://daydayup863.github.io/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>获取PostgreSQL hash table value</title>
    <link href="http://daydayup863.github.io/PostgreSQL/get_partition_table_value/"/>
    <id>http://daydayup863.github.io/PostgreSQL/get_partition_table_value/</id>
    <published>2020-09-07T11:23:12.000Z</published>
    <updated>2021-03-05T08:30:47.555Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;简单的修改了postgresql-12.3/src/backend/partitioning/partbounds.c代码， 创建C函数获取PostgreSQL hash 分区表hash value&lt;br&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="hash key" scheme="http://daydayup863.github.io/tags/hash-key/"/>
    
      <category term="partition table" scheme="http://daydayup863.github.io/tags/partition-table/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL后端进程</title>
    <link href="http://daydayup863.github.io/PostgreSQL/PostgreSQL_backend_process/"/>
    <id>http://daydayup863.github.io/PostgreSQL/PostgreSQL_backend_process/</id>
    <published>2020-08-27T09:32:48.000Z</published>
    <updated>2021-03-05T08:30:47.555Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;整体架构图&quot;&gt;&lt;a href=&quot;#整体架构图&quot; class=&quot;headerlink&quot; title=&quot;整体架构图&quot;&gt;&lt;/a&gt;整体架构图&lt;/h1&gt;&lt;p&gt;&lt;img data-src=&quot;/images/A_example_of_the_process_architecture_in_PostgreSQL.png&quot; alt=&quot; An example of the process architecture in PostgreSQL &quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="backend" scheme="http://daydayup863.github.io/tags/backend/"/>
    
      <category term="Architecture" scheme="http://daydayup863.github.io/tags/Architecture/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL vacuum</title>
    <link href="http://daydayup863.github.io/PostgreSQL/PostgreSQL_vacuum/"/>
    <id>http://daydayup863.github.io/PostgreSQL/PostgreSQL_vacuum/</id>
    <published>2020-08-20T09:30:29.000Z</published>
    <updated>2021-03-05T08:30:47.555Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;vacuum processing is a maintenance process that facilitates the persistent operation of PostgreSQL. Its two main tasks are removing dead tuples and the freezing transaction ids, both of which are briefly mentioned in Section 5.10.&lt;/p&gt;
&lt;p&gt;To remove dead tuples, vacuum processing provides two modes, i.e. Concurrent VACUUM and Full VACUUM. Concurrent VACUUM, often simply called VACUUM, removes dead tuples for each page of the table file, and other transactions can read the table while this process is running. In contrast, Full VACUUM removes dead tuples and defragments live tuples the whole file, and other transactions cannot access tables while Full VACUUM is running.&lt;/p&gt;
&lt;p&gt;Despite the fact that vacuum processing is essential for PostgreSQL, improving its functionality has been slow compared to other functions. For example, until version 8.0, this process had to be executed manually (with the psql utility or using the cron daemon). It was automated in 2005 when the autovacuum daemon was implemented.&lt;/p&gt;
&lt;p&gt;Since vacuum processing involves scanning whole tables, it is a costly process. In version 8.4 (2009), the Visibility Map (VM) was introduced to improve the efficiency of removing dead tuples. In version 9.6 (2016), the freeze process was improved by enhancing the VM. &lt;/p&gt;
    
    </summary>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/categories/PostgreSQL/"/>
    
    
      <category term="PostgreSQL" scheme="http://daydayup863.github.io/tags/PostgreSQL/"/>
    
      <category term="vacuum" scheme="http://daydayup863.github.io/tags/vacuum/"/>
    
  </entry>
  
</feed>
